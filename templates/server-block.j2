{% if site.websocket_needed %}
map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
}

{% endif %}
server {
    server_name {{ domain }}{% if include_www %} www.{{ domain }}{% endif %};
    
    {% if ssl_configured %}
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    
    ssl_certificate /etc/letsencrypt/live/{{ domain }}/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/{{ domain }}/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
    {% else %}
    listen 80;
    listen [::]:80;
    {% endif %}
    
    {% if site.root %}
    root {{ site.root }};
    index index.html index.htm index.nginx-debian.html;
    {% endif %}
    
    {% if site.upstreams %}
    # Proxy configuration
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    {% if ssl_configured %}
    proxy_set_header X-Forwarded-Proto https;
    {% else %}
    proxy_set_header X-Forwarded-Proto http;
    {% endif %}
    proxy_redirect off;
    proxy_set_header Host $host;
    proxy_set_header X-Forwarded-Host $server_name;
    proxy_buffering {{ site.proxy_buffering | default('off') }};
    {% endif %}
    
    {% for location in locations %}
    location {{ location.route }} {
        {% if location.websocket %}
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        {% endif %}
        {% for header, value in location.headers.items() %}
        proxy_set_header {{ header }} "{{ value }}";
        {% endfor %}
        {% if location.headers.get('Upgrade') or location.headers.get('Connection') %}
        proxy_http_version 1.1;
        {% endif %}
        {% if site.backend_https %}
        proxy_pass https://{{ location.target }};
        proxy_ssl_verify off;
        proxy_ssl_protocols TLSv1.2 TLSv1.3;
        proxy_ssl_ciphers HIGH:!aNULL:!MD5;
        {% else %}
        proxy_pass http://{{ location.target }};
        {% endif %}
    }
    {% endfor %}
}
{% if ssl_configured %}

# HTTP to HTTPS redirect
server {
    listen 80;
    listen [::]:80;
    server_name {{ domain }}{% if include_www %} www.{{ domain }}{% endif %};
    
    if ($host = {{ domain }}) {
        return 301 https://$host$request_uri;
    } # managed by Certbot
    
    return 404; # managed by Certbot
}
{% endif %}